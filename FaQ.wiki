#labels Featured
== SubEtha Frequently Asked Questions ==

== Help! ==

  * I just sent a message to a list and it isn't showing up in the archives during a search!

  This is because the thread which re-indexes the archives runs about every ten minutes or so. Just give it some time and the message will show up.
	
  * My system is too quiet, I want more debug output in the console!
    
  Well, you asked for it and here it comes. Drink from the firehose by editing ${RESIN_HOME}/conf/resin.xml
  {{{
  <logger name="org.subethamail" level="finest" />
  }}}

== Huh, Ads ==

  * What's with the google ad?

  Developing SubEtha was a major effort, requiring several months of fulltime work by several engineers motivated by the bizarre notion "wouldn't it be cool!" The thought that we might be able to get beer money out of this project didn't occur to us until long after the fact.

  Rather than asking for donations, we've added the least obtrusive google ad we could find to the dead space under the menus. We hope it's not too irritating, but if it is, you are welcome to remove it. We won't be upset.

  * How do I remove the google ad?

  Run the system at least once (to unpack the war), then edit the file ${resin.dir}/webapps/se/WEB-INF/tags/trim/list.tag.  There is a comment next to the HTML that you should remove.

  * Can't you just make that a config option?

  Come now. We went through all this trouble to write SubEtha, the least you can do is put a little effort into your mean (mean!) attempts to circumvent our beer money collection scheme.

== Tech Specs ==

  * What JDK version does SubEtha require?

  SubEtha requires JDK1.5 or later.
 
  * What Resin version does SubEtha require?

  Resin 4.0.0 (or possibly newer)
 
  * Does SubEtha run on other J2EE appservers?

  Not currently.  J2EE portability is a myth - it's possible to port an application, but it takes a lot of work.  We know, we migrated from JBoss to Resin in early 2009.  You're welcome to try, but it's pretty pointless - Resin is a wonderful environment.

  * Which databases does SubEtha support?

  Any that work with Hibernate and provide reasonable BLOB support. The developers use MySQL and Postgres.
 
  * Does SubEtha work with my Mail Transport Agent (eg Postfix, Sendmail, Exim, Qmail)?

  Yes, in fact, SubEtha currently requires an external MTA to deliver mail. The developers all use Postfix, but any MTA should work. See the MtaGuide. In the future, it may be possible to use SubEtha without an MTA.
 
  * Does SubEtha support i18n (internationalization)?
  
  SubEtha's text strings (ie: web interface, error messages, etc.) haven't been internationalized with different languages (yet), but SubEtha should pass messages through written in any language with any character encoding. There are two exceptions to this: Email is always rendered as UTF-8 in the web archives, and list owners may install filters which replace text in the mail message. All substituted text is encoded with the platform default character set.

  We *strongly recommend* that you set your JVM's default character set to UTF-8. Please read a more thorough discussion of [I18N] issues in SubEtha.

  * What about 8bit MIME?

  JavaMail will parse messages in 8BITMIME just fine. However, by default, JavaMail does not send mail in 8BITMIME. This can be turned on in ${jboss.dir}/server/default/deploy/mail-service.xml by setting the attribute mail.smtp.allow8bitmime=true. We DO NOT recommend doing this with the current version of JavaMail. We have found at least one bug whereby quoted-printable content with nonascii characters will have it's header changed to "8bit" without updating the actual contents. If this defect in JavaMail is corrected, this FAQ entry will change.

  You may have noticed by the reference to JBoss that this FAQ entry is obsolete and needs to be revised.

== Design Questions ==

  * Why does SubEtha store attachments in a separate table?
  We have a few reasons:
    # They're huge, and we don't want to have to parse them when we're rendering the archive page, or really ever. 
    # They need to be accessed separately as links from the archives anyways.
    # Message bodies without attachments are small enough to store in the 2nd level cache, making archive reading fast and scalable.