<?xml version="1.0"?>

<!--
	$Id$
	$URL$

	Top-level build file for SubEtha  Imports build files for the
	various modules, so this is the only entry point.
	
	To run the junit tests, you must copy junit.jar into ANT_HOME/lib.
-->

<project name="subetha" default="war" basedir=".">

	<property name="name" value="${ant.project.name}" />
	
	<property file="user.properties" />
	<property file="${user.home}/build.properties" />
	<property file="build.properties" />

	<property name="base.dir" location="." />

	<property name="build.debug" value="on" />
	<property name="build.deprecation" value="on" />

	<property name="ant.build.javac.target" value="1.5" />
	<property name="ant.build.javac.source" value="1.5" />

	<property name="build.dir" location="build" />
	<property name="build.classes.dir" location="${build.dir}/classes" />
	<property name="build.war.file" location="${build.dir}/${name}.war" />
	<property name="build.client.file" location="${build.dir}/${name}-client.jar" />

	<property name="resin.dir" location="/java/resin-4.0.0/" />
	<property name="deploy.dir" location="${resin.dir}/webapps" />
	<property name="expandedWar.dir" location="${deploy.dir}/${name}" />

	<property name="javasrc.dir" location="src" />
	<property name="web.dir" location="web" />
	<property name="lib.dir" location="lib" />

	<tstamp/>
	<tstamp>
		<format property="YEAR" pattern="yyyy" />
	</tstamp>

	<path id="master.classpath">
		<pathelement path="${java.class.path}" />
		
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>

		<fileset dir="${resin.dir}/lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<path id="rtest.build.classpath">
		<pathelement location="${build.classes.dir}" />
		<path refid="master.classpath" />
	</path>
	
	<path id="rtest.run.classpath">
		<pathelement location="${build.dir}/rtest/rtest.jar" />
		<path refid="rtest.build.classpath" />
	</path>
	
	<target name="init">
		<typedef resource="com/googlecode/svntask/svntask.xml">
			<classpath>
				<fileset dir="${base.dir}/lib">
					<include name="svnkit.jar"/>
					<include name="svntask.jar"/>
				</fileset>
			</classpath>
		</typedef>

		<svn><info path="${base.dir}" revisionProperty="revisionVersion" /></svn>

		<!--  A hack because svnant does not respect Ant's properties can't be overwritten rule. -->
		<property name="version" value="${revisionVersion}" />
	</target>

	<target name="init-dist">
		<input addproperty="version" message="Version number?" />
		<property name="dist.name" value="SubEtha-${version}" />
	</target>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>
	
 	<target name="classes" depends="init">
		<mkdir dir="${build.classes.dir}" />
 		
		<javac srcdir="${javasrc.dir}"
				destdir="${build.classes.dir}"
				debug="${build.debug}"
				deprecation="${build.deprecation}"
			>
			<classpath refid="master.classpath" />
		</javac>
 		
		<taskdef name="propertize" classname="org.tagonist.propertize.PropertizeTask">
			<classpath>
				<path refid="master.classpath" />
			</classpath>
		</taskdef>		

		<propertize verbose="false">
			<fileset dir="${build.classes.dir}"/>
		</propertize>
	</target>
	
	<target name="client" depends="classes">
		<jar jarfile="${build.client.file}">
			<fileset dir="${build.classes.dir}">
				<include name="org/subethamail/common/**" />
				<include name="org/subethamail/**/i/**" />
			</fileset>
		</jar>
	</target>
	
	<target name="war" depends="classes">
		<war destfile="${build.war.file}" webxml="${web.dir}/WEB-INF/web.xml">
			<webinf dir="${web.dir}/WEB-INF">
				<exclude name="web.xml" />
			</webinf>
			
			<fileset dir="${web.dir}">
				<exclude name="WEB-INF/**" />
			</fileset>
			
			<classes dir="${build.classes.dir}" />
			
			<classes dir="${javasrc.dir}">
				<include name="META-INF/**" />
			</classes>

			<lib dir="${lib.dir}">
				<exclude name="build-only/**"/>
			</lib>
		</war>
	</target>
	
	<target name="deploy" depends="war">
		<copy file="${build.war.file}" todir="${deploy.dir}" />
	</target>

	<target name="sync-deploy" depends="classes">
		<property name="timeDriftLimit" value="100"/>
		<sync todir="${expandedWar.dir}" granularity="${timeDriftLimit}" verbose="true" >
			<fileset dir="${web.dir}" />
			<preserveintarget>
				<!-- resin crap -->
				<include name="WEB-INF/tmp/**" />
				<include name="WEB-INF/work/**" />
				<!-- Taken care of below -->
				<include name="META-INF/**" />
				<include name="WEB-INF/classes/**" />
				<include name="WEB-INF/lib/**" />
			</preserveintarget>
		</sync>
		
		<sync todir="${expandedWar.dir}/WEB-INF/classes" granularity="${timeDriftLimit}" verbose="true">
			<fileset dir="${build.classes.dir}" />
			<preserveintarget>
				<include name="META-INF/**" />
			</preserveintarget>
		</sync>
		
		<sync todir="${expandedWar.dir}/WEB-INF/classes/META-INF" granularity="${timeDriftLimit}" verbose="true">
			<fileset dir="${javasrc.dir}/META-INF" />
		</sync>
		<sync todir="${expandedWar.dir}/WEB-INF/lib" verbose="true">
			<fileset dir="${lib.dir}" >
				<exclude name="**/build-only/**" />
			</fileset>
		</sync>
	</target>
	
	<target name="resin-deploy" depends="war">
	    <taskdef name="resin-deploy" classname="com.caucho.ant.ResinDeploy">
	        <classpath>
	              <fileset dir="lib">
	                  <include name="**"/>
	              </fileset>
                <fileset dir="${resin.dir}/lib/">
	          	  	<include name="**"/>
                </fileset>
	        </classpath>
	    </taskdef>
		
		<resin-deploy warfile="${build.war.file}" server="127.0.0.1" 
			 port="8080" user="subetha" password="subetha" 
			 virtualhost="default" version="0.1" commitmessage="trying"/>
	</target>
	
	<target name="precompile-jsp" description="precompile jsp">
        <taskdef name="resin-jspc" classname="com.caucho.ant.Jspc">
            <classpath>
                  <fileset dir="lib">
                      <include name="**"/>
                  </fileset>
                  <fileset dir="${resin.dir}/lib/">
            	  	<include name="**"/>
                  </fileset>
            </classpath>
        </taskdef>

        <resin-jspc rootDirectory="web"/>
	</target>

 	<target name="rtest-jar" depends="client">
		<mkdir dir="${build.dir}/rtest/classes" />
 		
		<javac
			srcdir="${base.dir}/rtest/src"
			destdir="${build.dir}/rtest/classes"
			includeAntRuntime="false"
			debug="${build.debug}"
			deprecation="${build.deprecation}"
			target="${ant.build.javac.target}"
			source="${ant.build.javac.source}">

			<classpath refid="rtest.build.classpath" />
		</javac>
 		
		<jar jarfile="${build.dir}/rtest/rtest.jar">
			<fileset dir="${build.dir}/rtest/classes"/>
			<fileset dir="${base.dir}/rtest/src/org/subethamail/rtest/msg">
				<include name="**/*.msg"/>
			</fileset>
			<manifest>
				<attribute name="Specification-Version" value="${version}" />
				<attribute name="Implementation-Version" value="${TODAY}" />
			</manifest>
		</jar>
	</target>

	<target name="junit" depends="rtest-jar, rtest-setup">
		<junit printsummary="yes" showoutput="yes" fork="yes" dir="${build.dir}">
			<classpath refid="rtest.run.classpath"/>
			
			<syspropertyset>
				<propertyref prefix="java.naming" />
			</syspropertyset>
			
			<formatter type="plain" />
			
			<batchtest todir="${build.dir}">
				<fileset dir="${build.dir}/rtest/classes">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="junit-special" depends="rtest-jar, rtest-setup">
		<junit printsummary="true" showoutput="true" fork="true" dir="${build.dir}">
			<classpath refid="rtest.run.classpath"/>
			
			<syspropertyset>
				<propertyref prefix="java.naming" />
			</syspropertyset>
			
			<formatter type="plain" />
			
			<batchtest todir="${build.dir}">
				<fileset dir="${build.dir}/rtest/classes">
					<include name="${junit.special.tests}" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="rtest-setup" depends="war">
		<mkdir dir="${build.dir}/resin/"/>
		<unjar  src="${build.war.file}"  dest="${build.dir}/resin/" />
	</target>
	
	<target name="junit-debug" depends="rtest-jar, rtest-setup">
		<junit printsummary="yes" showoutput="yes" fork="yes" dir="${build.dir}/resin/">
			<jvmarg value="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=7890"/>

			<classpath refid="rtest.run.classpath"/>
			
			<syspropertyset>
				<propertyref prefix="java.naming" />
			</syspropertyset>
			
			<formatter type="plain" />
			
			<batchtest todir="${build.dir}">
				<fileset dir="${build.dir}/rtest/classes">
					<include name="${junit.special.tests}" />
				</fileset>
			</batchtest>
		</junit>
	</target>
</project>